{
  "name": "sequence",
  "version": "2.2.1",
  "description": "The sequence module of FuturesJS (Ender.JS and Node.JS)",
  "homepage": "https://github.com/coolaj86/futures",
  "keywords": [
    "flow-control",
    "async",
    "asynchronous",
    "futures",
    "sequence",
    "chain",
    "step",
    "util",
    "browser"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/coolaj86/futures.git"
  },
  "author": {
    "name": "AJ ONeal",
    "email": "coolaj86@gmail.com",
    "url": "http://coolaj86.info"
  },
  "main": "sequence.js",
  "directories": {
    "lib": "."
  },
  "dependencies": {},
  "engines": {
    "node": "*",
    "ender": ">= 0.5.0"
  },
  "readme": "sequence()\n----\n\nCreates an Asynchronous Stack which execute each enqueued method after the previous function calls the provided `next(err, data [, ...])`.\n\n**Core**\n\n  * `Futures.sequence(globalContext=null)`\n  * `then(next, err, data [, ...])` - add a method onto the queue\n    * begins or resumes the queue\n    * passes the results of the previous function into the next\n\n**Example:**\n\n    var sequence = Futures.sequence(),\n      err;\n\n    sequence\n      .then(function (next) {\n        setTimeout(function () {\n          next(err, \"Hi\", \"World!\");\n        }, 120);\n      })\n      .then(function (next, err, a, b) {\n        setTimeout(function () {\n          next(err, \"Hello\", b);\n        }, 270);\n      })\n      .then(function (next, err, a, b) {\n        setTimeout(function () {\n          console.log(a, b);\n          next();\n        }, 50);\n      });\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/coolaj86/futures/issues"
  },
  "_id": "sequence@2.2.1",
  "_from": "sequence@2.x"
}
